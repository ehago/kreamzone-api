plugins {
    id "org.springframework.boot" version "2.4.5"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.asciidoctor.convert" version "1.5.8"
    id "java"
}

group = "com.ehago"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

def queryDslVersion = "4.4.0"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-hateoas",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-starter-validation",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-websocket",
            "org.springframework.boot:spring-boot-starter-oauth2-client",
            "io.jsonwebtoken:jjwt:0.9.1",
            "org.mapstruct:mapstruct:1.4.2.Final",
            "software.amazon.awssdk:s3:2.16.66",
            "com.querydsl:querydsl-jpa:${queryDslVersion}"
    )

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.restdocs:spring-restdocs-mockmvc",
            "org.springframework.security:spring-security-test"
    )

    annotationProcessor(
            "org.projectlombok:lombok-mapstruct-binding:0.2.0",
            "org.mapstruct:mapstruct-processor:1.4.2.Final",
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "org.projectlombok:lombok",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    )

    testAnnotationProcessor(
            "org.mapstruct:mapstruct:1.4.2.Final",
            "org.projectlombok:lombok"
    )

    compileOnly(
            "org.projectlombok:lombok"
    )

    runtimeOnly(
            "com.h2database:h2",
            "org.postgresql:postgresql"
    )

    developmentOnly(
            "org.springframework.boot:spring-boot-devtools"
    )

    testCompileOnly(
            "org.projectlombok:lombok"
    )
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

ext {
    set("snippetsDir", file("build/generated-snippets"))
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}